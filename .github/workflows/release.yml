# Copyright (C) 2022 Dynamic Solutions
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release Howlite

on:
  workflow_dispatch:

env:
  AWS_REGION: "eu-central-1"

permissions:
  id-token: write
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      released-version: ${{ steps.prepare-release.outputs.RELEASED_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WEBSIGHT_RELEASES_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_WEBSIGHT_RELEASES_RELEASE_DEPLOY_SA }}

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - name: Prepare release
        id: prepare-release
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          git config --global user.email "github.actions@ds.pl"
          git config --global user.name "GitHub Actions"
          mkdir -p ~/.ssh
          printf '%s\n' "${{ secrets.SSH_SECRET_KEY }}" > ~/.ssh/id_rsa
          chmod 0600 ~/.ssh/id_rsa
          ls -al ~/.ssh
          ./mvnw --batch-mode -s ~/.m2/settings-websight-public.xml release:prepare
          RELEASED_VERSION=$(git describe --tags --abbrev=0)
          echo "RELEASED_VERSION=${RELEASED_VERSION}" >> $GITHUB_ENV
          echo "RELEASED_VERSION=${RELEASED_VERSION}" >> $GITHUB_OUTPUT

      - name: Release to GCP Artifact Registry
        run: ./mvnw --batch-mode release:perform
